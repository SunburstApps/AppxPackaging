<Project>
  <PropertyGroup>
    <AppxPackageRoot Condition="'$(AppxPackageRoot)' == ''">$(OutputPath)\AppX\</AppxPackageRoot>
    <AppxPackageLayoutDir Condition="'$(AppxPackageLayoutDir)' == ''">$(AppxPackageRoot)Layout</AppxPackageLayoutDir>

    <CreateAppXPackageOnBuild Condition="'$(CreateAppXPackageOnBuild)' == ''">false</CreateAppXPackageOnBuild>
    <AppxReswDefaultLanguage Condition="'$(AppxReswDefaultLanguage)' == ''">en-US</AppxReswDefaultLanguage>
  </PropertyGroup>

  <PropertyGroup Condition="'$(AppxBuildToolsVersion)' == ''">
    <!-- Reference the latest version that is installed on the user's machine. -->
    <AppxBuildToolsVersion Condition="Exists('$(MSBuildProgramFiles32)\Windows Kits\10\UnionMetadata\10.0.16299.0\Windows.winmd') and '$(AppxTargetApiVersion)' == ''">10.0.16299.0</AppxBuildToolsVersion>
    <AppxBuildToolsVersion Condition="Exists('$(MSBuildProgramFiles32)\Windows Kits\10\UnionMetadata\10.0.15063.0\Windows.winmd') and '$(AppxTargetApiVersion)' == ''">10.0.15063.0</AppxBuildToolsVersion>
    <AppxBuildToolsVersion Condition="Exists('$(MSBuildProgramFiles32)\Windows Kits\10\UnionMetadata\10.0.14393.0\Windows.winmd') and '$(AppxTargetApiVersion)' == ''">10.0.14393.0</AppxBuildToolsVersion>
    <AppxBuildToolsVersion Condition="Exists('$(MSBuildProgramFiles32)\Windows Kits\10\UnionMetadata\10.0.10586.0\Windows.winmd') and '$(AppxTargetApiVersion)' == ''">10.0.10586.0</AppxBuildToolsVersion>
    <AppxBuildToolsVersion Condition="Exists('$(MSBuildProgramFiles32)\Windows Kits\10\UnionMetadata\10.0.10240.0\Windows.winmd') and '$(AppxTargetApiVersion)' == ''">10.0.10240.0</AppxBuildToolsVersion>
  </PropertyGroup>

  <UsingTask AssemblyFile="$(AppxBuildTasksAssembly)" TaskName="Sunburst.AppxPackaging.BuildTasks.CreateReswFiles" />
  <UsingTask AssemblyFile="$(AppxBuildTasksAssembly)" TaskName="Sunburst.AppxPackaging.BuildTasks.CreatePriConfig" />
  <UsingTask AssemblyFile="$(AppxBuildTasksAssembly)" TaskName="Sunburst.AppxPackaging.BuildTasks.CompilePriConfig" />
  <UsingTask AssemblyFile="$(AppxBuildTasksAssembly)" TaskName="Sunburst.AppxPackaging.BuildTasks.PackAppx" />

  <Target Name="AppxCheckPreconditions">
    <Error Text="An AppxManifest item must be specified." Condition="'@(AppxManifest)' == ''" />
    <Error Text="Only one AppxManifest item may be specified (there are @(AppxManifest -> Count()))." Condition="'@(AppxManifest -> Count())' != '1'" />
    <Error Text="You must specify the AppXDestination property if IncludeBuildOutputInAppXPackage is true" Condition="'$(IncludeBuildOutputInAppXPackage)' == 'true' and '$(AppXDestination)' == ''" />

    <PropertyGroup>
      <AppxPackageRoot Condition="!HasTrailingSlash($(AppxPackageRoot))">$(AppxPackageRoot)\</AppxPackageRoot>
      <AppxPackageLayoutDir Condition="!HasTrailingSlash($(AppxPackageLayoutDir))">$(AppxPackageLayoutDir)\</AppxPackageLayoutDir>
    </PropertyGroup>
  </Target>

  <Target Name="AppxCreatePackageLayout" DependsOnTargets="AppxCheckPreconditions">
    <MakeDir Directories="$(AppxPackageLayoutDir)" />

    <!-- Build the project references. -->
    <ItemGroup Condition="'$(IncludeBuildOutputInAppXPackage)' == 'true' and '$(AppXDestination)' != ''">
      <_ProjectReferenceWithDestination Include="$(MSBuildProjectFullPath)">
        <Destination>$(AppXDestination)</Destination>
      </_ProjectReferenceWithDestination>
    </ItemGroup>
    <ItemGroup>
      <_ProjectReferenceWithDestination Include="@(ProjectReference)" Condition="'%(ProjectReference.Destination)' != ''">
        <Destination>%(ProjectReference.Destination)</Destination>
      </_ProjectReferenceWithDestination>
    </ItemGroup>

    <MSBuild Projects="@(_ProjectReferenceWithDestination)" Targets="_AppXPackageGetProjectFiles" Properties="_AppXDestination=%(Destination)">
      <Output TaskParameter="TargetOutputs" ItemName="_ProjectFileWithDuplicates" />
    </MSBuild>

    <RemoveDuplicates Inputs="@(_ProjectFileWithDuplicates)">
      <Output TaskParameter="Filtered" ItemName="_ProjectFile" />
    </RemoveDuplicates>

    <!-- Don't copy the PDBs, these should not be shipped. -->
    <ItemGroup>
      <_ProjectFile Remove="@(_ProjectFile)" Condition="'%(Extension)' == '.pdb'" />
    </ItemGroup>

    <!-- Add the content files. -->
    <ItemGroup>
      <Content Include="@(AppxVisualAsset)">
        <CopyToAppX>true</CopyToAppX>
        <Destination>Assets</Destination>
      </Content>

      <Content Include="@(_ProjectFile)">
        <CopyToAppX>true</CopyToAppX>
        <Destination>%(_ProjectFile.Destination)</Destination>
      </Content>
    </ItemGroup>

    <!-- Copy the content files. -->
    <ItemGroup>
      <_ContentWithDestination Include="@(Content)" Condition="'%(Content.CopyToAppX)' == 'true'">
        <Destination>$(AppxPackageLayoutDir)\%(Content.Destination)</Destination>
      </_ContentWithDestination>
    </ItemGroup>
    <Copy SourceFiles="@(_ContentWithDestination)" DestinationFolder="%(Destination)" />

    <!-- Copy the AppX manifest. -->
    <Copy SourceFiles="@(AppxManifest)" DestinationFolder="$(AppxPackageLayoutDir)" />
  </Target>

  <Target Name="AppxCompileReswFiles" DependsOnTargets="AppxCheckPreconditions" Condition="'@(AppxStringResource)' != ''">
    <CreateReswFiles InputFiles="@(AppxStringResource)" OutputDirectory="$(AppxPackageLayoutDir)" DefaultLanguage="$(AppxReswDefaultLanguage)">
      <Output TaskParameter="AppxPriLanguages" PropertyName="AppxPriLanguages" />
    </CreateReswFiles>
  </Target>

  <Target Name="AppxCreatePriConfig" DependsOnTargets="AppxCheckPreconditions; AppxCompileReswFiles">
    <PropertyGroup>
      <AppxPriLanguages Condition="'$(AppxPriLanguages)' == ''">$(AppxReswDefaultLanguage)</AppxPriLanguages>
    </PropertyGroup>

    <MakeDir Directories="$(AppxPackageRoot)Fat" Condition="!Exists('$(AppxPackageRoot)Fat')" />
    <CreatePriConfig LanguageQualifiers="$(AppxPriLanguages)" ConfigFilePath="$(AppxPackageRoot)FatPackage.xml"
                     ToolsVersion="$(AppxBuildToolsVersion)" StandardOutputImportance="normal" StandardErrorImportance="high" />
  </Target>

  <Target Name="AppxCompilePriConfig" DependsOnTargets="AppxCheckPreconditions; AppxCreatePriConfig">
    <ItemGroup>
      <_OldPriFile Include="$(AppxPackageLayoutDir)resources*.pri" />
      <_OldPriFile Include="$(AppxPackageLayoutDir)resources*.map.txt" />
    </ItemGroup>

    <Delete Files="@(_OldPriFile)" />
    <CompilePriConfig PackageLayout="$(AppxPackageLayoutDir)" ConfigFile="$(AppxPackageRoot)FatPackage.xml" OutputFile="$(AppxPackageLayoutDir)resources.pri"
                      ToolsVersion="$(AppxBuildToolsVersion)" StandardOutputImportance="normal" StandardErrorImportance="high" />
  </Target>

  <Target Name="PackAppx" DependsOnTargets="MakeAppxLayout">
    <PackAppx ManifestFile="$(AppxPackageLayoutDir)AppxManifest.xml" ResourceLayoutFile="$(AppxPackageLayoutDir)resources.map.txt"
              OutputFile="$(OutputPath)$(TargetName).appx" ToolsVersion="$(AppxBuildToolsVersion)" />
  </Target>

  <Target Name="MakeAppxLayout" DependsOnTargets="AppxCreatePackageLayout; AppxCompilePriConfig" />
  <Target Name="CreateAppXLayoutOnBuild" DependsOnTargets="MakeAppxLayout" AfterTargets="Build" Condition="'$(CreateAppXLayoutOnBuild)' == 'true'" />
</Project>
